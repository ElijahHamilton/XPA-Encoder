read -p "enter station id. (3 characters long): " IDT
read -p "enter numbers to transmit. (5 numbers each. seperated by a _): " INP
rm list
rm output.wav
echo start encoding!
echo L.wav >> list
echo L.wav >> list
echo L.wav >> list
echo L.wav >> list
echo L.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo B.wav >> list
echo M.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
echo 1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
echo 1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
ID1=$(echo $IDT | cut -c1)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c2)
echo $ID1.wav >> list
ID1=$(echo $IDT | cut -c3)
echo $ID1.wav >> list
echo _.wav >> list
echo 1.wav >> list
echo _.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo S.wav >> list
echo B.wav >> list
echo M.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo P.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
echo _.wav >> list
PLA2=`cat list`
PLA3=${PLA2::-5}
sox -q $PLA3 -r 8000 input1.wav
rm list
LEN=${#INP}
NUM=1
for i in `seq $LEN` :
               do
                   PLA1=$(echo $INP | cut -c$NUM)
                   echo $PLA1.wav >> list
                   NUM2=$(( $NUM + 1))
                   NUM=$NUM2
done
PLA2=`cat list`
PLA3=${PLA2::-5}
sox -q $PLA3 -r 8000 input2.wav
rm list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
echo E.wav >> list
PLA2=`cat list`
PLA3=${PLA2::-5}
sox -q $PLA3 -r 8000 input3.wav
sox -q input1.wav input2.wav input3.wav -r 44100 output.wav
rm list
rm input1.wav
rm input2.wav
rm input3.wav
clear
echo encoding done!

